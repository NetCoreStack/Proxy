@{
    ViewData["Title"] = "Music Store";
}

@model AlbumViewModelSubmit
@{
    var artists = ViewBag.Artists != null ? (List<IdTextPair>)ViewBag.Artists : new List<IdTextPair>();
    var genres = ViewBag.Genres != null ? (List<IdTextPair>)ViewBag.Genres : new List<IdTextPair>();
}

<div id="content" style="margin-top:40px;">

    <div class="row">
        <label class="col-md-2 control-label"></label>
        <div class="col-md-6">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-inbox fa-fw "></i> Albums
            </h1>
        </div>
    </div>
    <div class="row">
        <form id="albumViewModelSubmit"  class="form-horizontal" asp-controller="Home" asp-action="savealbumsubmit" method="post">
            <div class="form-group">
                <label class="col-md-2 control-label">Artist</label>
                <div class="col-md-6">
                    @{
                        var component = Html.Efe().AutoComplete().Name(nameof(Model.ArtistId))
                            .DataSource(source => source.Read(Url.Action("GetArtistList", "Home")))
                            .Events(events => events.Change("autoCompleteChanged"))
                            .Events(events => events.Selected("autoCompleteSelected"));
                        component.Render();
                    }
                    <span asp-validation-for="ArtistId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Genre</label>
                <div class="col-md-6">
                    @(Html.Efe().AutoComplete().Name(nameof(Model.GenreId))
                            .DisableMinLength()
                            .DataSource(source => source.Data(genres))
                            .Events(events => events.Change("autoCompleteChanged")))
                    <span asp-validation-for="GenreId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Title</label>
                <div class="col-md-6">
                    <input class="form-control" asp-for="Title" type="text" autocomplete="off">
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Price</label>
                <div class="col-md-6">
                    <input class="form-control" asp-for="Price" type="text" autocomplete="off">
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Dosya</label>
                <div class="col-md-6">
                    @(Html.Efe().Upload().Name("Image").Events(e => e.Select("filesSelect")))
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6 pull-right">
                    <button tabindex="-1" type="reset" class="btn btn-default"><i class="fa fa-plus"></i> Reset</button>
                    <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Submit </button>
                </div>
            </div>
        </form>
    </div>
    <div class="row">
        <div>
            @{
                var gridComponent = Html.Efe().Grid<AlbumViewModel>()
                .Name("albumGrid")
                .DataSource(source => source.Ajax().Read("GetAlbums", "Home"))
                .Events(events => events.Init("gridInitHandler").CreatedRow("rowCreatedHandler"))
                .PageLength(PageLengths.Fifty)
                .BindableColumns(columns =>
                {
                    columns.Bind(x => x.ArtistId);
                    columns.Bind(x => x.Genre);
                    columns.Bind(x => x.Artist);
                    columns.Bind(x => x.Price);
                    columns.TemplateColumn("Select", "btnGridSelectRow");
                });

                gridComponent.FilterPanel("filterModal", "Filtre Uygula");

                gridComponent.Render();
            }
        </div>

    </div>

</div>

<script>

    function autoCompleteChanged(e) {
        console.log("Auto Complete Changed :", e);
    }

    function parentIdHandler() {
        return 1;
    }

    function sampleTemplateHandler(data) {
        return data.text;
    }

    function rowCreatedHandler(row, data, index) {
        return;
    }

    function autoCompleteSelected(e) {
        console.log("Selected :", e);
    }

    var gridInitHandler = function (e, settings, json) {

    }

    var filesSelect = function (e, context) {
        console.log(context.files);
        console.log(context.maxSize);
        console.log(context.allowedFileTypes);
    }

</script>


